server:
    port: 9001

spring:
    main:
        allow-bean-definition-overriding: true

management:
    endpoints:
        web:
            exposure:
                include: ["health","info","hystrix.stream"]
            cors:
                allowed-origins: "*"
                allowed-methods: "*"
feign:
    hystrix:
        enabled: true

#hystrix配置（超时时间、线程数）
hystrix:
    command:
        default:
            circuitBreaker:
                enabled: true                                   # 是否开启断路器功能
                requestVolumeThreshold: 20                      # 当在配置时间窗口内达到此数量的失败后，进行短路。默认20个
                sleepWindowInMilliseconds: 5                    # 短路多久以后开始尝试是否恢复，默认5s
                errorThresholdPercentage: 50                    # 出错百分比阈值，当达到此阈值后，开始短路。默认50%
            execution:
                isolation:
                    strategy:
                        THREAD                                  # 隔离策略，默认THREAD
                    thread:
                        timeoutInMilliseconds: 1000             # 命令执行超时限制， 默认1000
                        interruptOnTimeout: true                # 设置是否在执行超时时，中断HystrixCommand.run()的执行
                        interruptOnCancel: false                # 设置是否在取消任务执行时，中断HystrixCommand.run()的执行
                timeout:
                    enabled: true                               # 是否允许超时限制，默认true
            fallback:
                enabled: true                                   # 是否开启fallback功能
                isolation:
                    semaphore:
                        maxConcurrentRequests: 10               # 调用线程允许请求HystrixCommand.GetFallback()的最大数量，默认10。超出时将会有异常抛出，该项配置对于THREAD隔离模式也起作用

            metrics:
                rollingStats:
                    timeInMilliseconds: 10000                   # 设置统计滚动窗口的时间长度，默认10s
                    numBuckets: 10                              # 设置统计滚动窗口的桶数量，在高并发的环境里，每个桶的时间长度建议大于100ms
#
    threadpool:
        default:
            keepAliveTimeMinutes: 1                             # 设置线程多久没有服务后，需要释放（maximumSize - coreSize）个线程
            coreSize: 10                                        # 线程池核心数量

#            maxQueueSize: 150                                   # 最大排队长度。默认-1，使用SynchronousQueue，其他值则使用LinkedBlockingQueue。该值不能动态调整，若要动态调整，需要使用到queueSizeRejectionThreshold配置
#            queueSizeRejectionThreshold: 100                     # 排队线程数量阈值，默认为5，达到时拒绝，如果配置了该选项，队列的大小是该队列
#
#            maximumSize: 20                                     # 1.5.9新增属性，设置线程池最大值，默认10。这个是在不开始拒绝HystrixCommand的情况下支持的最大并发数。这个属性起作用的前提是设置了allowMaximumSizeToDrivergeFromCoreSize。1.5.9之前，核心线程池大小和最大线程池大小总是相同的
#            allowMaximumSizeToDivergeFromCoreSize: true        # 在1.5.9中新增的属性。该属性允许maximumSize起作用。属性值可以等于或者大于coreSize值，设置coreSize小于maximumSize的线程池能够支持maximumSize的并发数，但是会将不活跃的线程返回到系统中去
            metrics:
                rollingStats:
                    timeInMilliSeconds: 10000                   # 设置统计的滚动窗口的时间段大小。该属性是线程池保持指标时间长短
                    numBuckets: 10